/* lesson-5-1 Start*/

*,
*::before,
*::after {
	box-sizing: border-box;
}

/* Убираем внутренние отступы */

ul[class],
ol[class] {
	padding: 0;
}

/* Убираем внешние отступы */

body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
	margin: 0;
}

/* Выставляем основные настройки по-умолчанию для body */

body {
	min-height: 100vh;
	scroll-behavior: smooth;
	text-rendering: optimizeSpeed;
	line-height: 1.5;
}

/* Удаляем стандартную стилизацию для всех ul и il, у которых есть атрибут class*/

ul[class],
ol[class] {
	list-style: none;
}

/* Элементы a, у которых нет класса, сбрасываем до дефолтных стилей */

a:not([class]) {
	-webkit-text-decoration-skip: ink;
	text-decoration-skip-ink: auto;
}

/* Упрощаем работу с изображениями */

img {
	max-width: 100%;
	display: block;
}

/* Указываем понятную периодичность в потоке данных у article*/

article > * + * {
	margin-top: 1em;
}

/* Наследуем шрифты для инпутов и кнопок */

input,
button,
textarea,
select {
	font: inherit;
}

/* Удаляем все анимации и переходы для людей, которые предпочитай их не использовать */

.rooms-apartments {
	background-color: #F5F5F5;
	width: 100%;
	padding: 0px 120px;
}

.rooms-apartments .rooms-apartments__title {
	font-family: 'Comfortaa';
	font-style: normal;
	font-weight: bold;
	font-size: 20px;
	line-height: 40px;
	letter-spacing: 0.25px;
	color: rgba(0, 0, 0, 0.87);
	margin-bottom: 80px;
	padding-top: 50px;
}

.rooms-apartments .rooms-apartments__content {
	width: 100%;
	display: flex;
	margin: 0px auto;
	justify-content: space-evenly;
}

.rooms-apartments .rooms-apartments__content .apartments {
	position: relative;
	padding-bottom: 50px;
	padding-right: 10px;
	width: 33%;
}

.rooms-apartments .rooms-apartments__content .apartments .apartments__number-first {
	height: 538px;
	width: 100%;
	background-image: url("../../images/Straight_2.jpg");
	margin-bottom: 20px;
	background-repeat: no-repeat;
}

.rooms-apartments .rooms-apartments__content .apartments .apartments__number-second {
	height: 538px;
	width: 100%;
	margin-bottom: 20px;
	background-image: url("../../images/Straight_3.jpg");
	background-repeat: no-repeat;
}

.rooms-apartments .rooms-apartments__content .apartments .apartments__number-third {
	height: 538px;
	width: 100%;
	margin-bottom: 20px;
	background-image: url("../../images/Straight_4.jpg");
	background-repeat: no-repeat;
}

.rooms-apartments .rooms-apartments__content .apartments__number--numbered {
	position: absolute;
	border: 20px solid white;
	background-color: white;
	right: 10px;
	top: 475px;
	font-family: 'Roboto';
	font-style: normal;
	font-weight: 500;
	font-size: 20px;
	line-height: 23px;
	text-align: center;
	letter-spacing: 0.25px;
	color: rgba(0, 0, 0, 0.87);
}

.rooms-apartments .rooms-apartments__content .apartments__text-wrapper {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	height: 250px;
}

.rooms-apartments .rooms-apartments__content .apartments__text-wrapper .apartments__title {
	font-family: 'Comfortaa';
	font-style: normal;
	font-weight: bold;
	font-size: 26px;
	line-height: 28px;
	color: rgba(0, 0, 0, 0.87);
	margin-bottom: 20px;
}

.rooms-apartments .rooms-apartments__content .apartments__text-wrapper .apartments__description {
	font-family: 'Roboto';
	font-style: normal;
	font-weight: normal;
	font-size: 16px;
	line-height: 18px;
	letter-spacing: 0.15px;
	color: rgba(0, 0, 0, 0.6);
}

.rooms-apartments .rooms-apartments__content .apartments__text-wrapper .rooms-apartments__buttom {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 60px;
	width: 300px;
	border-radius: 50px;
	border: 2px solid transparent;
	background-color: #FFC56E;
	font: normal normal bold 18px/100px 'Merriweather';
	letter-spacing: 0.36px;
	color: #000000;
	opacity: 1;
	background-color: white;
	color: gray;
	border: none;
}

.rooms-apartments .rooms-apartments__content .apartments__text-wrapper .rooms-apartments__buttom svg {
	display: inline-block;
	width: 24px;
	height: 24px;
	fill: currentColor;
}

.rooms-apartments .rooms-apartments__content .apartments__text-wrapper .rooms-apartments__buttom:hover rect,
.rooms-apartments .rooms-apartments__content .apartments__text-wrapper .rooms-apartments__buttom:hover {
	background-color: #3B00DD;
	color: rgba(255, 255, 255, 0.87);
	fill: white;
}

/* lesson-2-2-2 Statr*/

.portfolio {
	width: 100%;
}

.portfolio .portfolio__text {
	margin: 100px auto;
}

.portfolio .portfolio__text .portfolio__title {
	font-family: 'Comfortaa';
	font-style: normal;
	font-weight: bold;
	font-size: 46px;
	line-height: 58px;
	text-align: center;
	color: rgba(0, 0, 0, 0.87);
}

.grid-portfolio {
	display: grid;
	grid-template-columns: repeat(auto-fit(285px, 285px));
	grid-template-rows: repeat(3, 1fr);
	grid-gap: 20px 20px;
	margin: 0px 120px;
}

.grid-portfolio .grid-portfolio__img1 {
	grid-area: 1/1/3/3;
}

.grid-portfolio .grid-portfolio__img6 {
	grid-area: 2/3/4/5;
}

.grid-portfolio .grid-portfolio__img2 {
	grid-area: 3/1/4/2;
}

.grid-portfolio .grid-portfolio__img3 {
	grid-area: 3/2/4/3;
}

.grid-portfolio .grid-portfolio__img4 {
	grid-area: 1/3/2/4;
}

.grid-portfolio .grid-portfolio__img5 {
	grid-area: 1/4/2/5;
}

@media (prefers-reduced-motion: reduce) {

* {
	-webkit-animation-duration: 0.01ms !important;
	animation-duration: 0.01ms !important;
	-webkit-animation-iteration-count: 1 !important;
	animation-iteration-count: 1 !important;
	transition-duration: 0.01ms !important;
	scroll-behavior: auto !important;
}

}

@media (max-width: 1024px) {

.rooms-apartments {
	padding: 0px 16px;
}

.rooms-apartments .rooms-apartments__title {
	margin-bottom: 40px;
	padding-top: 20px;
}

.grid-portfolio {
	margin: 0px 20px;
}

}

@media (max-width: 640px) {

.rooms-apartments .rooms-apartments__content {
	flex-direction: column;
	padding-left: 10%;
}

.rooms-apartments .rooms-apartments__content .apartments {
	width: 100%;
}

.rooms-apartments .rooms-apartments__content .apartments__text-wrapper {
	justify-content: space-evenly;
}

.grid-portfolio {
	grid-template-columns: repeat(auto-fit(285px, 285px));
	grid-template-rows: repeat(6, 1fr);
	margin: 0px 0px;
}

.grid-portfolio .grid-portfolio__img1 {
	grid-area: 1/1/3/3;
}

.grid-portfolio .grid-portfolio__img6 {
	grid-area: 4/1/6/3;
}

.grid-portfolio .grid-portfolio__img2 {
	grid-area: 3/1/4/2;
}

.grid-portfolio .grid-portfolio__img3 {
	grid-area: 3/2/4/3;
}

.grid-portfolio .grid-portfolio__img4 {
	grid-area: 6/1/7/2;
}

.grid-portfolio .grid-portfolio__img5 {
	grid-area: 6/2/7/3;
}

}

@media (max-width: 480px) {

.grid-portfolio {
	grid-template-columns: repeat(auto-fit, minmax(1fr, auto));
	grid-template-rows: repeat(6, 1fr);
	margin: 0px 0px;
	width: 100%;
	height: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}

.grid-portfolio .grid-portfolio__img1 {
	grid-area: 1/1/2/2;
}

.grid-portfolio .grid-portfolio__img6 {
	grid-area: 4/1/4/2;
}

.grid-portfolio .grid-portfolio__img2 {
	grid-area: 2/1/2/2;
	width: 100%;
	height: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}

.grid-portfolio .grid-portfolio__img3 {
	grid-area: 3/1/3/2;
	width: 100%;
	height: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}

.grid-portfolio .grid-portfolio__img4 {
	grid-area: 5/1/5/2;
	width: 100%;
	height: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}

.grid-portfolio .grid-portfolio__img5 {
	grid-area: 6/1/6/2;
	width: 100%;
	height: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}

}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
