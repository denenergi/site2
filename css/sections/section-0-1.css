*,
*::before,
*::after {
	box-sizing: border-box;
}

/* Убираем внутренние отступы */

ul[class],
ol[class] {
	padding: 0;
}

/* Убираем внешние отступы */

body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
	margin: 0;
}

/* Выставляем основные настройки по-умолчанию для body */

body {
	min-height: 100vh;
	scroll-behavior: smooth;
	text-rendering: optimizeSpeed;
	line-height: 1.5;
}

/* Удаляем стандартную стилизацию для всех ul и il, у которых есть атрибут class*/

ul[class],
ol[class] {
	list-style: none;
}

/* Элементы a, у которых нет класса, сбрасываем до дефолтных стилей */

a:not([class]) {
	-webkit-text-decoration-skip: ink;
	text-decoration-skip-ink: auto;
}

/* Упрощаем работу с изображениями */

img {
	max-width: 100%;
	display: block;
}

/* Указываем понятную периодичность в потоке данных у article*/

article > * + * {
	margin-top: 1em;
}

/* Наследуем шрифты для инпутов и кнопок */

input,
button,
textarea,
select {
	font: inherit;
}

/* Удаляем все анимации и переходы для людей, которые предпочитай их не использовать */

.header {
	background: url(../../images/odessa-background.jpg) no-repeat center center fixed;
	background: linear-gradient(rgba(5, 8, 64, 0.9), rgba(0, 0, 0, 0.1)), url(../../images/odessa-background.jpg) no-repeat center center fixed;
	background-size: cover;
	padding: 20px 100px;
}

.header__top {
	display: flex;
	justify-content: space-around;
	width: 100%;
}

.header__center {
	display: flex;
	flex-direction: column;
	justify-content: start;
	padding-bottom: 100px;
}

.header__right-block {
	width: 370px;
	padding-top: 20px;
}

.header__title {
	text-align: center;
	font: normal normal bold 40px/100px 'Merriweather';
	letter-spacing: 0.8px;
	color: black;
	opacity: 1;
	margin: 0px 0px;
	color: #FFFFFF;
}

.header__image {
	margin: 0px auto;
}

.header__left-block {
	width: 370px;
	padding-top: 20px;
}

.header__content {
	display: flex;
	flex-direction: column;
	align-items: center;
}

.header__content-title {
	font: normal normal bold 60px/100px Merriweather;
	letter-spacing: 1.2px;
	color: #FFFFFF;
	opacity: 1;
	text-align: center;
	margin: 0px 0px 120px 0px;
}

.header__burger {
	margin-top: 20px;
	display: none;
}

.header__burger:before,
.header__burger:after {
	content: '';
	background-color: white;
	position: absolute;
	width: 100%;
	height: 2px;
	left: 0;
}

.header__burger:before {
	top: 0;
}

.header__burger:after {
	bottom: 0;
}

.header__burger span {
	position: absolute;
	background-color: white;
	left: 0px;
	width: 100%;
	height: 2px;
	top: 9px;
}

.header__burger--active:before {
	transform: rotate(45deg);
	top: 9px;
	transition: all 500ms;
}

.header__burger--active:after {
	transform: rotate(-45deg);
	bottom: 9px;
	transition: all 500ms;
}

.header__burger--active span {
	transform: scale(0);
	transition: all 500ms;
}

.menu {
	margin-top: 20px;
}

.menu__wrapper {
	display: flex;
	justify-content: space-between;
}

.menu .menu-item {
	list-style-type: none;
}

.menu .menu-item a {
	font: normal normal normal 14px/20px 'Merriweather';
	letter-spacing: 0.19px;
	color: #D0E5FF;
	opacity: 0.8;
	list-style-type: none;
}

.menu .menu-item a:hover,
.menu .menu-item a:focus {
	padding-bottom: 5px;
	border-bottom: 2px solid rgba(255, 197, 110, 0.7);
	transition: all 500ms;
}

.button {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 60px;
	width: 300px;
	border-radius: 50px;
	border: 2px solid transparent;
	background-color: #FFC56E;
	font: normal normal bold 18px/100px 'Merriweather';
	letter-spacing: 0.36px;
	color: #000000;
	opacity: 1;
	margin-bottom: 180px;
}

.button:focus,
.button:hover {
	background-color: rgba(255, 197, 110, 0);
	border: 2px solid #FFC56E;
	transition: all 500ms;
}

.header__social {
	display: flex;
	justify-content: center;
	padding-bottom: 20px;
	display: none;
}

.header__social--active {
	display: inline-flex;
}

.social {
	padding: 0px 20px 50px 0px;
}

@media (prefers-reduced-motion: reduce) {

* {
	-webkit-animation-duration: 0.01ms !important;
	animation-duration: 0.01ms !important;
	-webkit-animation-iteration-count: 1 !important;
	animation-iteration-count: 1 !important;
	transition-duration: 0.01ms !important;
	scroll-behavior: auto !important;
}

}

@media (max-width: 1200px) {

.header {
	padding: 20px 30px;
}

}

@media (max-width: 1024px) {

.header {
	padding: 0px 20px;
}

.header__center {
	padding-bottom: 80px;
}

.header__right-block {
	width: 320px;
}

.header__title {
	font: normal normal bold 36px/100px 'Merriweather';
}

.header__left-block {
	width: 300px;
}

.header__content-title {
	font: normal normal bold 44px/80px Merriweather;
	margin: 0px 0px 80px 0px;
}

.menu .menu-item a {
	font: normal normal normal 13px/23px 'Merriweather';
}

.button {
	margin-bottom: 80px;
}

}

@media (max-width: 768px) {

.header {
	text-align: center;
}

.header--active {
	background: midnightblue;
}

.header__top {
	flex-direction: column;
}

.header__center {
	padding-bottom: 50px;
	order: -1;
}

.header__right-block {
	width: 100%;
	padding-top: 0px;
}

.header__title {
	font: normal normal bold 20px/40px 'Merriweather';
	padding-top: 30px;
}

.header__left-block {
	width: 100%;
	padding-top: 0px;
}

.header__content-title {
	position: relative;
	top: -100px;
}

.header__content-title--active {
	display: none;
}

.header__burger {
	display: block;
	position: absolute;
	top: 20px;
	width: 43px;
	height: 20px;
}

.menu {
	margin-top: 0px;
	position: relative;
	top: -1000px;
}

.menu__wrapper {
	flex-direction: column;
}

.menu .menu-item {
	padding-bottom: 30px;
}

.menu .menu-item a {
	font: normal normal 900 16px/23px 'Merriweather';
	letter-spacing: 0px;
	color: #FFFFFF;
	opacity: 1;
}

.menu--active {
	top: 0px;
}

}

@media (max-width: 480px) {

.header__center {
	padding-bottom: 0px;
}

.header__content-title {
	font: normal normal bold 21px/38px Merriweather;
	letter-spacing: 0.42px;
	margin: 0px 0px 0px 0px;
}

.button {
	width: 182px;
	height: 40px;
	font: normal normal bold 12px/47px Merriweather;
	letter-spacing: 0.24px;
}

}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
